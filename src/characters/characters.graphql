type Character {
    id: ID!
    name: String!
    episodes: [Episode!]!
    planet: Planet
    #  created: CreatedMetadata!
    #  updated: UpdatedMetadata!
}

input CreateCharacterInput {
    name: String!
}

input UpdateCharacterInput {
    id: ID!
    name: String!
    episodesIds: [String]
    planetId: String
}

input GetCharactersInput {
    first: Int
    after: Int
}

type Query {
    characters(getCharactersInput: GetCharactersInput): [Character]!
    character(id: ID!): Character
}

type Mutation {
    createCharacter(createCharacterInput: CreateCharacterInput!): Character!
    updateCharacter(updateCharacterInput: UpdateCharacterInput!): Character!
    removeCharacter(id: ID!): Character
}
